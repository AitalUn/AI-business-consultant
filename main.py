import streamlit as st
from haystack_integrations.document_stores.chroma import ChromaDocumentStore
from haystack_integrations.components.retrievers.chroma import ChromaEmbeddingRetriever
from haystack.components.embedders.openai_text_embedder import OpenAITextEmbedder
from haystack.components.generators.openai import OpenAIGenerator
from haystack import Pipeline
from haystack.components.builders import PromptBuilder
import os

# –ü–æ–ª—É—á–∞–µ–º API-–∫–ª—é—á OpenAI –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ ChromaDB
database = ChromaDocumentStore(host="localhost", port="8000")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
retriever = ChromaEmbeddingRetriever(document_store=database)
embedder = OpenAITextEmbedder(model="text-embedding-3-large")
generator = OpenAIGenerator(model= "gpt-4o-mini")

# –°–æ–∑–¥–∞–Ω–∏–µ RAG –ø–∞–π–ø–ª–∞–π–Ω–∞
prompt = """
–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞, —Ç–µ–±–µ –Ω–∞–¥–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º 
–æ—Ä–ø–µ–¥–µ–ª–∏—Ç—å –∫–∞–∫–∞—è —Å–µ–π—á–∞—Å —Å–∏—Ç—É–∞—Ü–∏—è —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –µ–≥–æ –±–∏–∑–Ω–µ—Å–æ–º, –∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –º–µ—Ç–æ–¥—ã —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã

–ü—Ä–æ–±–ª–µ–º–∞ –∫–ª–∏–µ–Ω—Ç–∞: {{query}}

—Å–∞–π—Ç—ã:
{% for document in documents %}
    {{ document.content }}
{% endfor %}
"""

prompt_builder = PromptBuilder(template=prompt)

rag = Pipeline()
rag.add_component("embedder", embedder)
rag.add_component("retriever", retriever)
rag.add_component("prompt", prompt_builder)
rag.add_component("generator", generator)

rag.connect("embedder.embedding", "retriever.query_embedding")
rag.connect("retriever.documents", "prompt.documents")
rag.connect("prompt", "generator")



# print("*"*100, "\n", rag.run({"embedder": {"text": "Oil"}}))

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ Streamlit
st.set_page_config(page_title="Business RAG", layout="wide")
st.title("AI-–ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞")

query = st.text_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å:", "")

if query:
    with st.spinner("–ò—â–µ–º –¥–∞–Ω–Ω—ã–µ..."):
        answer = rag.run({"embedder": {"text": query}, "prompt": {"query": query}})
    

        st.subheader("–ù–∞–π–¥–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:")
        st.markdown(answer['generator']['replies'][0])
        # for doc in answer['retriever']['documents'][:3]:
        #     st.markdown(f"**{doc.content}**  \nüîó [–ò—Å—Ç–æ—á–Ω–∏–∫]({doc.meta['link']})")
